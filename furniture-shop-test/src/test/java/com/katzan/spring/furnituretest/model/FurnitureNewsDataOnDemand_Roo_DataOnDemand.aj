// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.katzan.spring.furnituretest.model;

import com.katzan.spring.furnituretest.model.FurnitureNews;
import com.katzan.spring.furnituretest.model.FurnitureNewsDataOnDemand;
import com.katzan.spring.furnituretest.repository.FurnitureNewsRepository;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect FurnitureNewsDataOnDemand_Roo_DataOnDemand {
    
    declare @type: FurnitureNewsDataOnDemand: @Component;
    
    private Random FurnitureNewsDataOnDemand.rnd = new SecureRandom();
    
    private List<FurnitureNews> FurnitureNewsDataOnDemand.data;
    
    @Autowired
    FurnitureNewsRepository FurnitureNewsDataOnDemand.furnitureNewsRepository;
    
    public FurnitureNews FurnitureNewsDataOnDemand.getNewTransientFurnitureNews(int index) {
        FurnitureNews obj = new FurnitureNews();
        setNewsName(obj, index);
        setNewsText(obj, index);
        setNewsTitle(obj, index);
        return obj;
    }
    
    public void FurnitureNewsDataOnDemand.setNewsName(FurnitureNews obj, int index) {
        String newsName = "newsName_" + index;
        if (newsName.length() > 200) {
            newsName = newsName.substring(0, 200);
        }
        obj.setNewsName(newsName);
    }
    
    public void FurnitureNewsDataOnDemand.setNewsText(FurnitureNews obj, int index) {
        String newsText = "newsText_" + index;
        if (newsText.length() > 1500) {
            newsText = newsText.substring(0, 1500);
        }
        obj.setNewsText(newsText);
    }
    
    public void FurnitureNewsDataOnDemand.setNewsTitle(FurnitureNews obj, int index) {
        String newsTitle = "newsTitle_" + index;
        if (newsTitle.length() > 200) {
            newsTitle = newsTitle.substring(0, 200);
        }
        obj.setNewsTitle(newsTitle);
    }
    
    public FurnitureNews FurnitureNewsDataOnDemand.getSpecificFurnitureNews(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        FurnitureNews obj = data.get(index);
        Long id = obj.getId();
        return furnitureNewsRepository.findOne(id);
    }
    
    public FurnitureNews FurnitureNewsDataOnDemand.getRandomFurnitureNews() {
        init();
        FurnitureNews obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return furnitureNewsRepository.findOne(id);
    }
    
    public boolean FurnitureNewsDataOnDemand.modifyFurnitureNews(FurnitureNews obj) {
        return false;
    }
    
    public void FurnitureNewsDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = furnitureNewsRepository.findAll(new org.springframework.data.domain.PageRequest(from / to, to)).getContent();
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'FurnitureNews' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<FurnitureNews>();
        for (int i = 0; i < 10; i++) {
            FurnitureNews obj = getNewTransientFurnitureNews(i);
            try {
                furnitureNewsRepository.save(obj);
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            furnitureNewsRepository.flush();
            data.add(obj);
        }
    }
    
}
